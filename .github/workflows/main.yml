name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags: 'v*.*.*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: get version from tag
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        echo $env:GITHUB_REF
        $env:GITHUB_REF -match "refs/tags/(?<content>.*)"
        $RELEASE_VERSION = $matches["content"]
        echo "::set-env name=RELEASE_VERSION::$RELEASE_VERSION" 
        $env:GITHUB_REF -match "refs/tags/v(?<content>.*)"
        $NUMERICAL_VERSION = $matches["content"]
        echo "::set-env name=NUMERICAL_VERSION::$NUMERICAL_VERSION"
        $FULL_VERSION = "$env:NUMERICAL_VERSION.$env:GITHUB_RUN_ID"
        echo "::set-env name=FULL_VERSION::$FULL_VERSION"

    - name: Change Assembly version
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        $filePath = 'AssemblyInfo.cs'
        $fileContent = (Get-Content $filePath)
        echo $fileContent
        $replacedFileContent = $fileContent
        $replacedFileContent = $replacedFileContent.Replace('[assembly: AssemblyVersion("0.0.0.0")]', ( '[assembly: AssemblyVersion("' + $env:NUMERICAL_VERSION + '")]' ))
        $replacedFileContent = $replacedFileContent.Replace('[assembly: AssemblyFileVersion("0.0.0.0")]', ( '[assembly: AssemblyFileVersion("' + $env:NUMERICAL_VERSION + '")]' ))
        echo $replacedFileContent
        Out-File -FilePath $filePath -InputObject $replacedFileContent
      working-directory: GH.MiscToolbox/GH.MiscToolbox/Properties
    
    - name: Change Grasshopper Info version
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        $filePath = 'GH.MiscToolboxInfo.cs'
        $fileContent = (Get-Content $filePath)
        echo $fileContent
        $replacedFileContent = $fileContent
        $replacedFileContent = $replacedFileContent.Replace('public override string Version => "0.0.0.0";', ( 'public override string Version => "' + $env:NUMERICAL_VERSION + '";' ))
        $replacedFileContent = $replacedFileContent.Replace('public override string AssemblyVersion => "0.0.*";', ( 'public override string AssemblyVersion => "' + $env:NUMERICAL_VERSION + '";' ))
        echo $replacedFileContent
        Out-File -FilePath $filePath -InputObject $replacedFileContent
      working-directory: GH.MiscToolbox/GH.MiscToolbox

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet.exe for use with actions
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      uses: NuGet/setup-nuget@v1.0.2
    
    - name: Restore NuGet packages
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: nuget restore GH.MiscToolbox/GH.MiscToolbox.sln
    
    - name: Build the Solution
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: msbuild GH.MiscToolbox/GH.MiscToolbox.sln
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: GH-Misc-Toolbox
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./GH.MiscToolbox/GH.MiscToolbox/bin/MiscToolbox.gha
        asset_name: MiscToolbox.gha
        asset_content_type: application/zip
    
    - name: Build solution and generate NuGet package
      run: |
        $tag = $env:GITHUB_REF.Split("/")[-1].Split("v")[1]
        nuget pack GH.MiscToolbox/GH.MiscToolbox/GH.MiscToolbox.csproj -Version $tag

    - name: Push generated package to GitHub registry
      run: dotnet nuget push *.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Download Yak
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: curl -o GH.MiscToolbox/GH.MiscToolbox/yak.exe http://files.mcneel.com/yak/tools/latest/yak.exe
      
    - name: List yak
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: ls GH.MiscToolbox/GH.MiscToolbox

    - name: Change Manifest version
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        $filePath = 'manifest.yml'
        $fileContent = (Get-Content $filePath)
        echo $fileContent
        $replacedFileContent = $fileContent
        $replacedFileContent = $replacedFileContent.Replace('version: 0.0.0', ( 'version: ' + $env:NUMERICAL_VERSION))
        echo $replacedFileContent
        Out-File -FilePath $filePath -InputObject $replacedFileContent
      working-directory: GH.MiscToolbox/GH.MiscToolbox/bin/Yak
    
    - name: Build Yak
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: ..\..\yak.exe build
      working-directory: GH.MiscToolbox/GH.MiscToolbox/bin/Yak

    - name: Push new version to YAK
      run: |
        $YAK_FILE=$(ls *.yak)
        echo $YAK_FILE
        ..\..\yak.exe push $YAK_FILE
      working-directory: GH.MiscToolbox/GH.MiscToolbox/bin/Yak
      env:
        YAK_TOKEN: ${{ secrets.YAK_TOKEN }}
